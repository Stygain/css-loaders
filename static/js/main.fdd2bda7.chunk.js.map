{"version":3,"sources":["hamburgerX.js","menu.js","ArrowLeft.js","ArrowRight.js","ProgressDots.js","loaders/pulseBar1.js","loaders/pulseBar2.js","loaders/pulseBubble1.js","loaders/pulseBubble2.js","loaders/ripple.js","loaders/rect1.js","loaders/rect2.js","loaders/circleRotate.js","loaders/Square.js","loaders/CircleRotateColor.js","carousel.js","App.js","serviceWorker.js","index.js"],"names":["HamburgerX","props","styling","css","id","onClick","clickhandler","click","className","Menu","href","ArrowLeft","useState","hover","setHover","setCurrent","current","onMouseEnter","onMouseLeave","ArrowRight","ProgressDots","data","map","index","key","PulseBar1","PulseBar2","PulseBubble1","PulseBubble2","Ripple","Rect1","Rect2","CircleRotate","Square","width","height","viewBox","class","points","pageData","anim","CircleRotateColor","bgColor","accentColor","Content","item","Carousel","length","App","clicked","setClicked","hamburgerStyle","Boolean","window","location","hostname","match","globalStyles","ReactDOM","render","styles","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fdd2bda7.chunk.js","sourcesContent":["/** @jsx jsx */\nimport { jsx, css } from '@emotion/core';\n\nfunction HamburgerX(props) {\n  const styling = css`\n    width: 35px;\n    height: 30px;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: center;\n    padding: 8px;\n\n    &:hover {\n      cursor: pointer;\n    }\n\n    div {\n      width: 35px;\n      height: 6px;\n      background-color: #000;\n      transition: 0.3s cubic-bezier(.69,-0.36,.32,1.35);\n    }\n\n    div:nth-child(1).change {\n      transform: translateY(12px) scale(1.2) rotate(-135deg);\n      background-color: rgb(117, 117, 117);\n    }\n\n    div:nth-child(2).change {\n      opacity: 0;\n    }\n\n    div:nth-child(3).change {\n      transform: translateY(-12px) scale(1.2) rotate(135deg);\n      background-color: rgb(117, 117, 117);\n    }\n  `;\n  return (\n    <div css={styling} id=\"button\" onClick={\n        () => {\n          props.clickhandler(!props.click)\n        }\n      }>\n  \t  <div className={props.click === true ? \"change\" : \"\"}></div>\n  \t  <div className={props.click === true ? \"change\" : \"\"}></div>\n  \t  <div className={props.click === true ? \"change\" : \"\"}></div>\n  \t</div>\n  );\n}\n\nexport default HamburgerX;\n","/** @jsx jsx */\nimport { jsx, css } from '@emotion/core';\n\nfunction Menu(props) {\n  const styling = css`\n    @import url('https://fonts.googleapis.com/css?family=Spartan&display=swap');\n    font-family: 'Spartan', sans-serif;\n\n    position: absolute;\n    z-index: 1;\n    opacity: 0%;\n    background-color: rgb(149, 189, 178);\n    text-align: center;\n    margin: 0;\n\n    top: -100%;\n    left: -100%;\n    width: 100%;\n    height: 100%;\n\n    border-radius: 0;\n\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n\n    transition: 0.8s ease-in-out 0.2s;\n\n    &.open {\n      opacity: 100%;\n      width: 100%;\n      height: 100%;\n      top: 0;\n      left: 0;\n\n      transition: 0.8s ease-in-out;\n    }\n\n    .menu {\n      ${'' /* border: 1px solid red; */}\n\n      min-width: 50%;\n      height: 50%;\n      margin-bottom: 200%;\n\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      justify-content: flex-start;\n\n      transition: 0.8s ease-in-out 0s;\n    }\n\n    .menu.open {\n      margin-bottom: 0;\n\n      transition: 0.8s ease-in-out 0.3s;\n    }\n\n    .item {\n      ${'' /* border: 1px solid blue; */}\n\n      font-size: 26px;\n      white-space: nowrap;\n      overflow: hidden;\n      width: 0px;\n\n      margin: 10px;\n    }\n\n    .item.link {\n      font-size: 38px;\n      font-weight: 600;\n    }\n\n    .menu.open .item {\n      width: 100%;\n    }\n\n    .menu .item {\n      transition: 0.5s ease-in-out 0s;\n    }\n\n    .menu.open .item:nth-child(1) {\n      transition: 0.8s ease-in-out 0.6s;\n    }\n\n    .menu.open .item:nth-child(2) {\n      transition: 0.8s ease-in-out 1s;\n    }\n\n    .menu.open .item:nth-child(3) {\n      transition: 0.8s ease-in-out 1.4s;\n    }\n\n    .item:nth-child(1) {\n      margin-top: 20px;\n      margin-bottom: 20px;\n      padding-bottom: 3px;\n      border-bottom: 3px solid black;\n    }\n\n    a {\n      text-decoration: none;\n      position: relative;\n      display: inline-block;\n      ${'' /* font-size: 20px; */}\n      ${'' /* font-weight: 300; */}\n      color: rgb(108, 108, 108);\n      transition: color .4s ease;\n      padding: 6px 0;\n      margin-bottom: 7px;\n\n      &:hover {\n        color: rgb(0, 0, 0);\n\n        &::after,\n        &::before {\n          width: 100%;\n          left: 0;\n        }\n\n      }\n\n      &::after,\n      &::before {\n        content: '';\n        position: absolute;\n        top: calc(85%);\n        width: 0;\n        right: 0;\n        height: 6px;\n      }\n\n      &::before {\n        transition: width .4s cubic-bezier(0.51, 0.18, 0, 0.88) .1s;\n        background: rgb(136, 136, 136);\n      }\n\n      &::after {\n        transition: width .2s cubic-bezier(0.29, 0.18, 0.26, 0.83);\n        background: rgb(0, 0, 0);\n      }\n    }\n  `;\n  return (\n    <div css={styling} className={props.click === true ? \"open\" : \"\"}>\n      <div className={props.click === true ? \"menu open\" : \"menu\"}>\n        <div className=\"item\">\n          Adam Barton\n        </div>\n        <div className=\"item link\">\n          <a href=\"https://github.com/Stygain\">\n            Github\n          </a>\n        </div>\n        <div className=\"item link\">\n          <a href=\"https://stygain.github.io/northwestvision/\">\n            Photography\n          </a>\n        </div>\n      </div>\n  \t</div>\n\n  );\n}\n\nexport default Menu;\n","/** @jsx jsx */\nimport { jsx, css } from '@emotion/core';\nimport { useState } from 'react';\n\n\nfunction ArrowLeft(props) {\n  const [ hover, setHover ] = useState(false);\n\n  const styling = css`\n    &.button-container {\n      ${'' /* border: 1px solid green; */}\n\n      position: absolute;\n      top: 48%;\n      width: 40px;\n      height: 40px;\n      z-index: 3;\n\n      cursor: pointer;\n    }\n\n    &.button-container.left {\n      left: 10px;\n    }\n\n    .arrow {\n      width: 25px;\n      height: 8px;\n      background-color: #000;\n\n      transition: transform 0.2s ease;\n    }\n\n    .arrow.top.left {\n      transform: translateY(10px) translateX(7px) rotate(-45deg);\n    }\n\n    .arrow.bot.left {\n      transform: translateY(14px) translateX(7px) rotate(45deg);\n    }\n\n    .arrow.top.left.hover {\n      transform: translateY(9px) translateX(6px) rotate(-50deg);\n    }\n\n    .arrow.bot.left.hover {\n      transform: translateY(15px) translateX(6px) rotate(50deg);\n    }\n  `;\n  return (\n    <div css={styling}\n      className=\"button-container left\"\n      onClick={\n        () => {\n          props.setCurrent(props.current - 1)\n        }\n      }\n      onMouseEnter={\n        () => {\n          setHover(true);\n        }\n      }\n      onMouseLeave={\n        () => {\n          setHover(false);\n        }\n      }>\n      <div className={hover ? \"arrow top left hover\" : \"arrow top left\"}></div>\n      <div className={hover ? \"arrow bot left hover\" : \"arrow bot left\"}></div>\n    </div>\n  );\n}\n\nexport default ArrowLeft;\n","/** @jsx jsx */\nimport { jsx, css } from '@emotion/core';\nimport { useState } from 'react';\n\n\nfunction ArrowRight(props) {\n  const [ hover, setHover ] = useState(false);\n\n  const styling = css`\n    &.button-container {\n      ${'' /* border: 1px solid green; */}\n\n      position: absolute;\n      top: 48%;\n      width: 40px;\n      height: 40px;\n      z-index: 3;\n\n      cursor: pointer;\n    }\n\n    &.button-container.right {\n      right: 10px;\n    }\n\n    .arrow {\n      width: 25px;\n      height: 8px;\n      background-color: #000;\n\n      transition: transform 0.2s ease;\n    }\n\n    .arrow.top.right {\n      transform: translateY(10px) translateX(7px) rotate(45deg);\n    }\n\n    .arrow.bot.right {\n      transform: translateY(14px) translateX(7px) rotate(-45deg);\n    }\n\n    .arrow.top.right.hover {\n      transform: translateY(9px) translateX(6px) rotate(50deg);\n    }\n\n    .arrow.bot.right.hover {\n      transform: translateY(15px) translateX(6px) rotate(-50deg);\n    }\n  `;\n  return (\n    <div css={styling}\n      className=\"button-container right\"\n      onClick={\n        () => {\n          props.setCurrent(props.current + 1)\n        }\n      }\n      onMouseEnter={\n        () => {\n          setHover(true);\n        }\n      }\n      onMouseLeave={\n        () => {\n          setHover(false);\n        }\n      }>\n      <div className={hover ? \"arrow top right hover\" : \"arrow top right\"}></div>\n      <div className={hover ? \"arrow bot right hover\" : \"arrow bot right\"}></div>\n    </div>\n  );\n}\n\nexport default ArrowRight;\n","/** @jsx jsx */\nimport { jsx, css } from '@emotion/core';\n\n\nfunction ProgressDots(props) {\n  const styling = css`\n    ${'' /* border: 1px solid blue; */}\n\n    width: 100%;\n    position: absolute;\n    bottom: 10px;\n    height: 40px;\n    z-index: 3;\n\n    .dot-container {\n      ${'' /* border: 1px solid green; */}\n\n      margin: 0 auto;\n      width: 270px;\n      height: 100%;\n\n      display: flex;\n      align-items: center;\n      justify-content: space-evenly;\n    }\n\n    .dot-container .outer-dot {\n      ${'' /* border: 1px solid red; */}\n\n      padding: 5px;\n      cursor: pointer;\n      transition: transform 0.3s;\n    }\n\n    .dot-container .dot {\n      border-radius: 100%;\n      background-color: rgb(42, 42, 42);\n      width: 10px;\n      height: 10px;\n    }\n\n    .outer-dot:hover {\n      transform: scale(1.3);\n    }\n\n    .outer-dot:nth-child(${props.current + 1}) {\n      ${'' /* border: 4px solid orange; */}\n\n      transform: scale(1.7);\n    }\n\n    .outer-dot:nth-child(${props.current + 1}) .dot {\n      ${'' /* border: 4px solid orange; */}\n\n      background-color: #000;\n    }\n  `;\n  return (\n    <div css={styling}>\n      <div className=\"dot-container\">\n        {props.data.map((data, index) => {\n          return (\n            <div className=\"outer-dot\" onClick={() => {\n              props.setCurrent(index)\n            }}>\n              <div className=\"dot\" key={index}></div>\n            </div>);\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default ProgressDots;\n","/** @jsx jsx */\nimport { jsx, css } from '@emotion/core';\n\nfunction PulseBar1() {\n  const styling = css`\n    ${'' /* border: 1px solid green; */}\n\n    width: 120px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    div {\n      width: 20px;\n      height: 100px;\n      background-color: #BBB;\n    }\n\n    div:nth-child(1) {\n      animation: pulse .6s ease 0s infinite alternate;\n    }\n    div:nth-child(2) {\n      animation: pulse .6s ease .2s infinite alternate;\n    }\n    div:nth-child(3) {\n      animation: pulse .6s ease .4s infinite alternate;\n    }\n    div:nth-child(4) {\n      animation: pulse .6s ease .6s infinite alternate;\n    }\n\n    @keyframes pulse {\n      from {\n        opacity: 1;\n        transform: scale(1);\n        background-color: #000;\n      }\n      to {\n        opacity: .4;\n        transform: scale(.75);\n        background-color: #BBB;\n      }\n    }\n  `;\n  return (\n    <div css={styling}>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  );\n}\n\nexport default PulseBar1;\n","/** @jsx jsx */\nimport { jsx, css } from '@emotion/core';\n\nfunction PulseBar2() {\n  const styling = css`\n    ${'' /* border: 1px solid green; */}\n\n    width: 120px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    div {\n      width: 15px;\n      height: 90px;\n      background-color: #BBB;\n    }\n\n    div:nth-child(1) {\n      animation: pulse .6s ease 0s infinite alternate;\n    }\n    div:nth-child(2) {\n      animation: pulse .6s ease 0.2s infinite alternate;\n    }\n    div:nth-child(3) {\n      animation: pulse .6s ease .4s infinite alternate;\n    }\n    div:nth-child(4) {\n      animation: pulse .6s ease 0.4s infinite alternate;\n    }\n    div:nth-child(5) {\n      animation: pulse .6s ease 0.2s infinite alternate;\n    }\n    div:nth-child(6) {\n      animation: pulse .6s ease 0s infinite alternate;\n    }\n\n    @keyframes pulse {\n      from {\n        opacity: 1;\n        transform: scale(1);\n        background-color: #000;\n      }\n      to {\n        opacity: .4;\n        transform: scale(.75);\n        background-color: #BBB;\n      }\n    }\n  `;\n  return (\n    <div css={styling}>\n  \t  <div></div>\n  \t  <div></div>\n  \t  <div></div>\n  \t  <div></div>\n  \t  <div></div>\n  \t  <div></div>\n  \t</div>\n  );\n}\n\nexport default PulseBar2;\n","/** @jsx jsx */\nimport { jsx, css } from '@emotion/core';\n\nfunction PulseBubble1() {\n  const styling = css`\n    ${'' /* border: 1px solid green; */}\n    \n    width: 120px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    div {\n      width: 20px;\n      height: 20px;\n      border-radius: 50%;\n      background-color: #BBB;\n    }\n\n    div:nth-child(1) {\n      animation: pulse .6s ease 0s infinite alternate;\n    }\n    div:nth-child(2) {\n      animation: pulse .6s ease 0.2s infinite alternate;\n    }\n    div:nth-child(3) {\n      animation: pulse .6s ease .4s infinite alternate;\n    }\n    div:nth-child(4) {\n      animation: pulse .6s ease 0.6s infinite alternate;\n    }\n\n    @keyframes pulse {\n      from {\n        opacity: 1;\n        transform: scale(1);\n        background-color: #000;\n      }\n      to {\n        opacity: .4;\n        transform: scale(.75);\n        background-color: #BBB;\n      }\n    }\n  `;\n  return (\n    <div css={styling}>\n  \t  <div></div>\n  \t  <div></div>\n  \t  <div></div>\n  \t  <div></div>\n  \t</div>\n  );\n}\n\nexport default PulseBubble1;\n","/** @jsx jsx */\nimport { jsx, css } from '@emotion/core';\n\nfunction PulseBubble2() {\n  const styling = css`\n    ${'' /* border: 1px solid green; */}\n\n    width: 120px;\n    height: 35px;\n    display: flex;\n    justify-content: space-between;\n    align-items: flex-start;\n\n    div {\n      width: 20px;\n      height: 20px;\n      border-radius: 50%;\n      background-color: #BBB;\n    }\n\n    div:nth-child(1) {\n      animation: bubble .6s cubic-bezier(.6,0,.73,1.29) 0s infinite alternate;\n    }\n    div:nth-child(2) {\n      animation: bubble .6s cubic-bezier(.6,0,.73,1.29) 0.2s infinite alternate;\n    }\n    div:nth-child(3) {\n      animation: bubble .6s cubic-bezier(.6,0,.73,1.29) .4s infinite alternate;\n    }\n    div:nth-child(4) {\n      animation: bubble .6s cubic-bezier(.6,0,.73,1.29) 0.6s infinite alternate;\n    }\n\n    @keyframes bubble {\n      from {\n        opacity: 1;\n        background-color: #000;\n      }\n      to {\n        opacity: .4;\n        transform: translateY(15px);\n        background-color: #BBB;\n      }\n    }\n  `;\n  return (\n    <div css={styling}>\n  \t  <div></div>\n  \t  <div></div>\n  \t  <div></div>\n  \t  <div></div>\n  \t</div>\n  );\n}\n\nexport default PulseBubble2;\n","/** @jsx jsx */\nimport { jsx, css } from '@emotion/core';\n\nfunction Ripple() {\n  const styling = css`\n    ${'' /* border: 1px solid green; */}\n\n    width: 100px;\n    height: 100px;\n    position: relative;\n\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    div {\n      width: 30px;\n      height: 30px;\n      border-radius: 50%;\n      position: absolute;\n    }\n\n    div:nth-child(1) {\n      animation: ripple 1.6s ease 0s infinite;\n    }\n    div:nth-child(2) {\n      animation: ripple 1.6s ease 0.4s infinite;\n    }\n    div:nth-child(3) {\n      animation: ripple 1.6s ease 0.8s infinite;\n    }\n\n    @keyframes ripple {\n      from {\n        border: 5px solid;\n        opacity: 1;\n        top: 45%;\n        left: 45%;\n        width: 0px;\n        height: 0px;\n      }\n      to {\n        border: 5px solid;\n        opacity: 0;\n        top: 10%;\n        left: 10%;\n        width: 69px;\n        height: 69px;\n        transform: scale(1.3);\n      }\n    }\n  `;\n  return (\n    <div css={styling}>\n  \t  <div></div>\n  \t  <div></div>\n  \t  <div></div>\n  \t</div>\n  );\n}\n\nexport default Ripple;\n","/** @jsx jsx */\nimport { jsx, css } from '@emotion/core';\n\nfunction Rect1() {\n  const styling = css`\n    ${'' /* border: 1px solid green; */}\n\n    width: 80px;\n    height: 10px;\n    position: relative;\n\n    div {\n      width: 10px;\n      height: 10px;\n      background-color: rgb(0, 0, 0);\n      position: absolute;\n      top: 0;\n      left: 0;\n    }\n\n    div:nth-child(1) {\n      animation: move 1s ease 0s infinite alternate;\n    }\n\n    @keyframes move {\n      0% {\n        top: 0;\n        left: 0;\n        width: 10px;\n        height: 10px;\n        background-color: rgb(0, 0, 0);\n      }\n      50% {\n        top: 0;\n        left: 0;\n        width: 80px;\n        height: 10px;\n        background-color: rgb(140, 140, 140);\n      }\n      100% {\n        top: 0;\n        left: 70px;\n        width: 10px;\n        height: 10px;\n        background-color: rgb(0, 0, 0);\n      }\n    }\n  `;\n  return (\n    <div css={styling}>\n  \t  <div></div>\n  \t</div>\n  );\n}\n\nexport default Rect1;\n","/** @jsx jsx */\nimport { jsx, css } from '@emotion/core';\n\nfunction Rect2() {\n  const styling = css`\n    ${'' /* border: 1px solid green; */}\n\n    width: 80px;\n    height: 80px;\n    position: relative;\n\n    div {\n      width: 10px;\n      height: 10px;\n      background-color: rgb(0, 0, 0);\n      position: absolute;\n      top: 0;\n      left: 0;\n    }\n\n    div:nth-child(1) {\n      animation: square-move 3s ease 0s infinite;\n    }\n\n    @keyframes square-move {\n      0% {\n        top: 0;\n        left: 0;\n        width: 10px;\n        height: 10px;\n        background-color: rgb(0, 0, 0);\n      }\n      12.5% {\n        top: 0;\n        left: 0;\n        width: 80px;\n        height: 10px;\n        background-color: rgb(140, 140, 140);\n      }\n      25% {\n        top: 0;\n        left: 70px;\n        width: 10px;\n        height: 10px;\n        background-color: rgb(0, 0, 0);\n      }\n      37.5% {\n        top: 0;\n        left: 70px;\n        height: 80px;\n        width: 10px;\n        background-color: rgb(140, 140, 140);\n      }\n      50% {\n        top: 70px;\n        left: 70px;\n        width: 10px;\n        height: 10px;\n        background-color: rgb(0, 0, 0);\n      }\n      67.5% {\n        top: 70px;\n        left: 0px;\n        width: 80px;\n        height: 10px;\n        background-color: rgb(140, 140, 140);\n      }\n      75% {\n        top: 70px;\n        left: 0px;\n        width: 10px;\n        height: 10px;\n        background-color: rgb(0, 0, 0);\n      }\n      87.5% {\n        top: 0px;\n        left: 0;\n        height: 80px;\n        width: 10px;\n        background-color: rgb(140, 140, 140);\n      }\n      100% {\n        top: 0px;\n        left: 0px;\n        width: 10px;\n        height: 10px;\n        background-color: rgb(0, 0, 0);\n      }\n    }\n  `;\n  return (\n    <div css={styling}>\n  \t  <div></div>\n  \t</div>\n  );\n}\n\nexport default Rect2;\n","/** @jsx jsx */\nimport { jsx, css } from '@emotion/core';\n\nfunction CircleRotate() {\n  const styling = css`\n    ${'' /* border: 1px solid green; */}\n\n    width: 75px;\n    height: 75px;\n    position: relative;\n\n    div {\n      width: 60px;\n      height: 60px;\n      border-radius: 50%;\n      position: absolute;\n    }\n\n    div:nth-child(1) {\n      border: 8px solid #000;\n      border-color: #000 transparent transparent transparent;\n      animation: circle-move-1 6s cubic-bezier(.76,0,.63,1) 0.25s infinite;\n    }\n    div:nth-child(2) {\n      border: 8px solid #000;\n      border-color: transparent #000 transparent transparent;\n      animation: circle-move-2 6s cubic-bezier(.76,0,.63,1) 0.5s infinite;\n    }\n    div:nth-child(3) {\n      border: 8px solid #000;\n      border-color: transparent transparent #000 transparent;\n      animation: circle-move-3 2s cubic-bezier(.76,0,.63,1) 0s infinite;\n    }\n\n    @keyframes circle-move-1 {\n      0% {\n        border-color: #000 transparent transparent transparent;\n      }\n      25% {\n        border-color: transparent #000 transparent transparent;\n        transform: rotate(360deg);\n      }\n      50% {\n        border-color: transparent transparent #000 transparent;\n        transform: rotate(720deg);\n      }\n      75% {\n        border-color: transparent transparent transparent #000;\n        transform: rotate(1080deg);\n      }\n    }\n\n    @keyframes circle-move-2 {\n      0% {\n        border-color: transparent #000 transparent transparent;\n      }\n      25% {\n        border-color: transparent transparent #000 transparent;\n        transform: rotate(360deg);\n      }\n      50% {\n        border-color: transparent transparent transparent #000;\n        transform: rotate(720deg);\n      }\n      75% {\n        border-color: #000 transparent transparent transparent;\n        transform: rotate(1080deg);\n      }\n    }\n\n    @keyframes circle-move-3 {\n      0% {\n        border-color: transparent transparent #000 transparent;\n      }\n      25% {\n        border-color: transparent transparent transparent #000;\n        transform: rotate(360deg);\n      }\n      50% {\n        border-color: #000 transparent transparent transparent;\n        transform: rotate(720deg);\n      }\n      75% {\n        border-color: transparent #000 transparent transparent;\n        transform: rotate(1080deg);\n      }\n    }\n  `;\n  return (\n    <div css={styling}>\n  \t  <div></div>\n  \t  <div></div>\n  \t</div>\n  );\n}\n\nexport default CircleRotate;\n","/** @jsx jsx */\nimport { jsx, css } from '@emotion/core';\n\nfunction Square() {\n  const styling = css`\n    ${'' /* border: 1px solid green; */}\n\n    width: 200px;\n    height: 200px;\n    position: relative;\n\n    svg {\n      position: fixed;\n      top: 50%;\n      left: 50%;\n      transform: translate(-50%, -50%) rotate(225deg) scale(1);\n    }\n\n    polyline {\n      stroke-width: 10;\n      fill: none;\n    }\n\n    .stroke-still {\n      stroke: rgb(34, 34, 34);\n    }\n\n    .stroke-animation {\n      animation: stroke-spacing 1.5s ease-in 0s infinite,\n                 stroke-color 6s linear 0s infinite;\n      transform-origin: center;\n    }\n\n\n    @keyframes stroke-spacing {\n      0% {\n        stroke-dasharray: 0 200;\n      }\n      45% {\n        stroke-dashoffset: 0;\n        stroke-dasharray: 200 200;\n      }\n      90% {\n        stroke-dashoffset: -200;\n        stroke-dasharray: 200 200;\n      }\n      100% {\n        stroke-dashoffset: -200;\n        stroke-dasharray: 200 200;\n      }\n    }\n\n    @keyframes stroke-color {\n      0%  { stroke: rgb(55, 159, 228); }\n      25% { stroke: rgb(215, 98, 238); }\n      50% { stroke: rgb(241, 78, 8); }\n      75% { stroke: rgb(241, 211, 8); }\n      100% { stroke: rgb(55, 159, 228); }\n    }\n  `;\n  return (\n    <div css={styling}>\n      <svg width=\"100\" height=\"100\" viewBox=\"0 0 100 100\">\n        <polyline class=\"stroke-still\" points=\"0,0 100,0 100,100\"></polyline>\n        <polyline class=\"stroke-still\" points=\"0,0 0,100 100,100\"></polyline>\n        <polyline class=\"stroke-animation\" points=\"0,0 100,0 100,100\"></polyline>\n        <polyline class=\"stroke-animation\" points=\"0,0 0,100 100,100\"></polyline>\n      </svg>\n  \t</div>\n  );\n}\n\nexport default Square;\n","/** @jsx jsx */\nimport { jsx, css } from '@emotion/core';\n\nfunction CircleRotate() {\n  const styling = css`\n    ${'' /* border: 1px solid green; */}\n\n    width: 75px;\n    height: 75px;\n    position: relative;\n\n    div {\n      width: 60px;\n      height: 60px;\n      border-radius: 50%;\n      position: absolute;\n    }\n\n    div:nth-child(1) {\n      border: 8px solid;\n      border-color: rgb(55, 159, 228) transparent transparent transparent;\n      animation: border-color-1 6s cubic-bezier(.76,0,.63,1) 0.25s infinite;\n    }\n    div:nth-child(2) {\n      border: 8px solid;\n      border-color: transparent rgb(55, 159, 228) transparent transparent;\n      animation: border-color-2 6s cubic-bezier(.76,0,.63,1) 0.5s infinite;\n    }\n    div:nth-child(3) {\n      border: 8px solid;\n      border-color: transparent transparent rgb(55, 159, 228) transparent;\n      animation: border-color-3 2s cubic-bezier(.76,0,.63,1) 0s infinite;\n    }\n\n    @keyframes border-color-1 {\n      0% {\n        border-color: rgb(55, 159, 228) transparent transparent transparent;\n      }\n      25% {\n        border-color: transparent rgb(215, 98, 238) transparent transparent;\n        transform: rotate(360deg);\n      }\n      50% {\n        border-color: transparent transparent rgb(241, 78, 8) transparent;\n        transform: rotate(720deg);\n      }\n      75% {\n        border-color: transparent transparent transparent rgb(241, 211, 8);\n        transform: rotate(1080deg);\n      }\n      100% {\n        border-color: rgb(55, 159, 228) transparent transparent transparent;\n      }\n    }\n\n    @keyframes border-color-2 {\n      0% {\n        border-color: transparent rgb(55, 159, 228) transparent transparent;\n      }\n      25% {\n        border-color: transparent transparent rgb(215, 98, 238) transparent;\n        transform: rotate(360deg);\n      }\n      50% {\n        border-color: transparent transparent transparent rgb(241, 78, 8);\n        transform: rotate(720deg);\n      }\n      75% {\n        border-color: rgb(241, 211, 8) transparent transparent transparent;\n        transform: rotate(1080deg);\n      }\n      100% {\n        border-color: transparent rgb(55, 159, 228) transparent transparent;\n      }\n    }\n\n    @keyframes border-color-3 {\n      0% {\n        border-color: transparent transparent rgb(55, 159, 228) transparent;\n      }\n      25% {\n        border-color: transparent transparent transparent rgb(215, 98, 238);\n        transform: rotate(360deg);\n      }\n      50% {\n        border-color: rgb(241, 78, 8) transparent transparent transparent;\n        transform: rotate(720deg);\n      }\n      75% {\n        border-color: transparent rgb(241, 211, 8) transparent transparent;\n        transform: rotate(1080deg);\n      }\n      100% {\n        border-color: transparent transparent rgb(55, 159, 228) transparent;\n      }\n    }\n  `;\n  return (\n    <div css={styling}>\n  \t  <div></div>\n  \t  <div></div>\n  \t</div>\n  );\n}\n\nexport default CircleRotate;\n","/** @jsx jsx */\nimport { jsx, css } from '@emotion/core';\nimport { useState } from 'react';\n\nimport ArrowLeft from './ArrowLeft.js';\nimport ArrowRight from './ArrowRight.js';\nimport ProgressDots from './ProgressDots.js';\n\nimport PulseBar1 from './loaders/pulseBar1.js';\nimport PulseBar2 from './loaders/pulseBar2.js';\nimport PulseBubble1 from './loaders/pulseBubble1.js';\nimport PulseBubble2 from './loaders/pulseBubble2.js';\nimport Ripple from './loaders/ripple.js';\nimport Rect1 from './loaders/rect1.js';\nimport Rect2 from './loaders/rect2.js';\nimport CircleRotate from './loaders/circleRotate.js';\nimport Square from './loaders/Square.js';\nimport CircleRotateColor from './loaders/CircleRotateColor.js';\n\n\nconst pageData = [\n  {\n    anim: <CircleRotateColor />,\n    bgColor: \"rgb(210, 210, 210)\",\n    accentColor: \"\"\n  },\n  {\n    anim: <Square />,\n    bgColor: \"rgb(153, 153, 153)\",\n    accentColor: \"\"\n  },\n  {\n    anim: <PulseBar1 />,\n    bgColor: \"rgb(210, 210, 210)\",\n    accentColor: \"\"\n  },\n  {\n    anim: <PulseBar2 />,\n    bgColor: \"rgb(210, 146, 146)\",\n    accentColor: \"\"\n  },\n  {\n    anim: <PulseBubble1 />,\n    bgColor: \"rgb(124, 168, 128)\",\n    accentColor: \"\"\n  },\n  {\n    anim: <PulseBubble2 />,\n    bgColor: \"rgb(139, 188, 191)\",\n    accentColor: \"\"\n  },\n  {\n    anim: <Ripple />,\n    bgColor: \"rgb(108, 126, 201)\",\n    accentColor: \"\"\n  },\n  {\n    anim: <Rect1 />,\n    bgColor: \"rgb(218, 218, 218)\",\n    accentColor: \"\"\n  },\n  {\n    anim: <Rect2 />,\n    bgColor: \"rgb(182, 245, 234)\",\n    accentColor: \"\"\n  },\n  {\n    anim: <CircleRotate />,\n    bgColor: \"rgb(188, 222, 181)\",\n    accentColor: \"\"\n  }\n]\n\nfunction Content(props) {\n  const styling = css`\n    ${'' /* border: 1px solid green; */}\n\n    position: absolute;\n    top: 0;\n    left: 0;\n    height: 100%;\n    width: 100%;\n    z-index: 1;\n\n    transition: background-color 0.5s cubic-bezier(.4,.38,.12,1);\n    background-color: ${props.item.bgColor};\n\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    .centered {\n      ${'' /* border: 1px solid orange; */}\n\n      margin: 0 auto;\n      width: 80%;\n      height: 80%;\n\n      display: flex;\n      justify-content: center;\n      align-items: center;\n    }\n  `;\n  return (\n    <div css={styling}>\n      <div className=\"centered\">\n        {props.item.anim}\n      </div>\n  \t</div>\n  );\n}\n\nfunction Carousel() {\n  const [ current, setCurrent ] = useState(0);\n  const styling = css`\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    z-index: -1;\n  `;\n  return (\n    <div css={styling}>\n      {current === 0 ?\n        <ArrowRight current={current} setCurrent={setCurrent} /> :\n        current === pageData.length-1 ?\n          <ArrowLeft current={current} setCurrent={setCurrent} /> :\n          <div>\n            <ArrowLeft current={current} setCurrent={setCurrent} />\n            <ArrowRight current={current} setCurrent={setCurrent} />\n          </div>}\n\n      <Content item={pageData[current]} />\n      <ProgressDots current={current} data={pageData} setCurrent={setCurrent} />\n  \t</div>\n  );\n}\n\nexport default Carousel;\n","/** @jsx jsx */\nimport { jsx, css } from '@emotion/core';\nimport { useState } from 'react';\n\nimport HamburgerX from './hamburgerX.js';\nimport Menu from './menu.js';\nimport Carousel from './carousel.js';\n\n\nfunction App() {\n  const [clicked, setClicked] = useState(false);\n\n  const hamburgerStyle = css`\n    position: relative;\n    top: 20px;\n    left: 20px;\n    z-index: 2;\n  `;\n\n  return (\n    <div>\n  \t  <div css={hamburgerStyle}>\n        <HamburgerX click={clicked} clickhandler={setClicked}/>\n      </div>\n      <Menu click={clicked}/>\n      <Carousel />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","/** @jsx jsx */\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { jsx, Global, css } from '@emotion/core';\nimport { BrowserRouter } from 'react-router-dom';\n\nconst globalStyles = css`\n  body {\n    margin: 0;\n    height: 100%;\n    overflow: hidden;\n  }\n`;\n\nReactDOM.render(\n  <div>\n    <Global styles={globalStyles} />\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </div>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}