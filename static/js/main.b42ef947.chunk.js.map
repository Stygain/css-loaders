{"version":3,"sources":["hamburgerX.js","ArrowLeft.js","ArrowRight.js","ProgressDots.js","loaders/pulseBar1.js","loaders/pulseBar2.js","loaders/pulseBubble1.js","loaders/pulseBubble2.js","loaders/ripple.js","loaders/rect1.js","loaders/rect2.js","loaders/circleRotate.js","carousel.js","App.js","serviceWorker.js","index.js"],"names":["HamburgerX","props","styling","css","onClick","clickhandler","click","className","ArrowLeft","setCurrent","current","ArrowRight","ProgressDots","data","map","index","key","PulseBar1","PulseBar2","PulseBubble1","PulseBubble2","Ripple","Rect1","Rect2","CircleRotate","dotData","Content","console","log","length","Carousel","useState","App","clicked","setClicked","hamburgerStyle","Boolean","window","location","hostname","match","globalStyles","ReactDOM","render","styles","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b42ef947.chunk.js","sourcesContent":["/** @jsx jsx */\nimport { jsx, css } from '@emotion/core';\n\nfunction HamburgerX(props) {\n  const styling = css`\n    width: 35px;\n    height: 30px;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: center;\n    padding: 8px;\n\n    &:hover {\n      cursor: pointer;\n    }\n\n    div {\n      width: 35px;\n      height: 6px;\n      background-color: #000;\n      transition: 0.3s cubic-bezier(.69,-0.36,.32,1.35);\n    }\n\n    div:nth-child(1).change {\n      transform: translateY(12px) scale(1.2) rotate(-135deg);\n      background-color: #000;\n    }\n    div:nth-child(2).change {\n      opacity: 0;\n    }\n    div:nth-child(3).change {\n      transform: translateY(-12px) scale(1.2) rotate(135deg);\n      background-color: #000;\n    }\n  `;\n  return (\n    <div css={styling} onClick={\n        () => {\n          props.clickhandler(!props.click)\n        }\n      }>\n  \t  <div className={props.click ? \"change\" : \"\"}></div>\n  \t  <div className={props.click ? \"change\" : \"\"}></div>\n  \t  <div className={props.click ? \"change\" : \"\"}></div>\n  \t</div>\n  );\n}\n\nexport default HamburgerX;\n","/** @jsx jsx */\nimport { jsx, css } from '@emotion/core';\n\n\nfunction ArrowLeft(props) {\n  const styling = css`\n    &.button-container {\n      ${'' /* border: 1px solid green; */}\n\n      position: absolute;\n      top: 48%;\n      width: 40px;\n      height: 40px;\n      z-index: 3;\n\n      cursor: pointer;\n    }\n\n    &.button-container.left {\n      left: 10px;\n    }\n\n    .arrow {\n      width: 25px;\n      height: 8px;\n      background-color: #000;\n    }\n\n    .arrow.top.left {\n      transform: translateY(10px) translateX(7px) rotate(-45deg);\n    }\n\n    .arrow.bot.left {\n      transform: translateY(14px) translateX(7px) rotate(45deg);\n    }\n  `;\n  return (\n    <div css={styling} className=\"button-container left\" onClick={\n      () => {\n        props.setCurrent(props.current - 1)\n      }\n    }>\n      <div className=\"arrow top left\"></div>\n      <div className=\"arrow bot left\"></div>\n    </div>\n  );\n}\n\nexport default ArrowLeft;\n","/** @jsx jsx */\nimport { jsx, css } from '@emotion/core';\n\n\nfunction ArrowRight(props) {\n  const styling = css`\n    &.button-container {\n      ${'' /* border: 1px solid green; */}\n\n      position: absolute;\n      top: 48%;\n      width: 40px;\n      height: 40px;\n      z-index: 3;\n\n      cursor: pointer;\n    }\n\n    &.button-container.right {\n      right: 10px;\n    }\n\n    .arrow {\n      width: 25px;\n      height: 8px;\n      background-color: #000;\n    }\n\n    .arrow.top.right {\n      transform: translateY(10px) translateX(7px) rotate(45deg);\n    }\n\n    .arrow.bot.right {\n      transform: translateY(14px) translateX(7px) rotate(-45deg);\n    }\n  `;\n  return (\n    <div css={styling} className=\"button-container right\" onClick={\n      () => {\n        props.setCurrent(props.current + 1)\n      }\n    }>\n      <div className=\"arrow top right\"></div>\n      <div className=\"arrow bot right\"></div>\n    </div>\n  );\n}\n\nexport default ArrowRight;\n","/** @jsx jsx */\nimport { jsx, css } from '@emotion/core';\n\n\nfunction ProgressDots(props) {\n  const styling = css`\n    ${'' /* border: 1px solid blue; */}\n\n    width: 100%;\n    position: absolute;\n    bottom: 10px;\n    height: 40px;\n    z-index: 3;\n\n    .dot-container {\n      ${'' /* border: 1px solid green; */}\n\n      margin: 0 auto;\n      width: 200px;\n      height: 100%;\n\n      display: flex;\n      align-items: center;\n      justify-content: space-evenly;\n    }\n\n    .dot-container .outer-dot {\n      ${'' /* border: 1px solid red; */}\n\n      padding: 5px;\n      cursor: pointer;\n      transition: transform 0.3s;\n    }\n\n    .dot-container .dot {\n      border-radius: 100%;\n      background-color: #000;\n      width: 10px;\n      height: 10px;\n\n    }\n\n    .outer-dot:nth-child(${props.current + 1}) {\n      ${'' /* border: 4px solid orange; */}\n\n      transform: scale(1.5);\n    }\n  `;\n  return (\n    <div css={styling}>\n      <div className=\"dot-container\">\n        {props.data.map((data, index) => {\n          return (\n            <div className=\"outer-dot\" onClick={() => {\n              props.setCurrent(index)\n            }}>\n              <div className=\"dot\" key={index}></div>\n            </div>);\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default ProgressDots;\n","/** @jsx jsx */\nimport { jsx, css } from '@emotion/core';\n\nfunction PulseBar1() {\n  const styling = css`\n    ${'' /* border: 1px solid green; */}\n\n    width: 120px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    div {\n      width: 20px;\n      height: 100px;\n      background-color: #BBB;\n    }\n\n    div:nth-child(1) {\n      animation: pulse .6s ease 0s infinite alternate;\n    }\n    div:nth-child(2) {\n      animation: pulse .6s ease .2s infinite alternate;\n    }\n    div:nth-child(3) {\n      animation: pulse .6s ease .4s infinite alternate;\n    }\n    div:nth-child(4) {\n      animation: pulse .6s ease .6s infinite alternate;\n    }\n\n    @keyframes pulse {\n      from {\n        opacity: 1;\n        transform: scale(1);\n        background-color: #000;\n      }\n      to {\n        opacity: .4;\n        transform: scale(.75);\n        background-color: #BBB;\n      }\n    }\n  `;\n  return (\n    <div css={styling}>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  );\n}\n\nexport default PulseBar1;\n","/** @jsx jsx */\nimport { jsx, css } from '@emotion/core';\n\nfunction PulseBar2() {\n  const styling = css`\n    ${'' /* border: 1px solid green; */}\n\n    width: 120px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    div {\n      width: 15px;\n      height: 90px;\n      background-color: #BBB;\n    }\n\n    div:nth-child(1) {\n      animation: pulse .6s ease 0s infinite alternate;\n    }\n    div:nth-child(2) {\n      animation: pulse .6s ease 0.2s infinite alternate;\n    }\n    div:nth-child(3) {\n      animation: pulse .6s ease .4s infinite alternate;\n    }\n    div:nth-child(4) {\n      animation: pulse .6s ease 0.4s infinite alternate;\n    }\n    div:nth-child(5) {\n      animation: pulse .6s ease 0.2s infinite alternate;\n    }\n    div:nth-child(6) {\n      animation: pulse .6s ease 0s infinite alternate;\n    }\n\n    @keyframes pulse {\n      from {\n        opacity: 1;\n        transform: scale(1);\n        background-color: #000;\n      }\n      to {\n        opacity: .4;\n        transform: scale(.75);\n        background-color: #BBB;\n      }\n    }\n  `;\n  return (\n    <div css={styling}>\n  \t  <div></div>\n  \t  <div></div>\n  \t  <div></div>\n  \t  <div></div>\n  \t  <div></div>\n  \t  <div></div>\n  \t</div>\n  );\n}\n\nexport default PulseBar2;\n","/** @jsx jsx */\nimport { jsx, css } from '@emotion/core';\n\nfunction PulseBubble1() {\n  const styling = css`\n    ${'' /* border: 1px solid green; */}\n    \n    width: 120px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    div {\n      width: 20px;\n      height: 20px;\n      border-radius: 50%;\n      background-color: #BBB;\n    }\n\n    div:nth-child(1) {\n      animation: pulse .6s ease 0s infinite alternate;\n    }\n    div:nth-child(2) {\n      animation: pulse .6s ease 0.2s infinite alternate;\n    }\n    div:nth-child(3) {\n      animation: pulse .6s ease .4s infinite alternate;\n    }\n    div:nth-child(4) {\n      animation: pulse .6s ease 0.6s infinite alternate;\n    }\n\n    @keyframes pulse {\n      from {\n        opacity: 1;\n        transform: scale(1);\n        background-color: #000;\n      }\n      to {\n        opacity: .4;\n        transform: scale(.75);\n        background-color: #BBB;\n      }\n    }\n  `;\n  return (\n    <div css={styling}>\n  \t  <div></div>\n  \t  <div></div>\n  \t  <div></div>\n  \t  <div></div>\n  \t</div>\n  );\n}\n\nexport default PulseBubble1;\n","/** @jsx jsx */\nimport { jsx, css } from '@emotion/core';\n\nfunction PulseBubble2() {\n  const styling = css`\n    ${'' /* border: 1px solid green; */}\n\n    width: 120px;\n    height: 35px;\n    display: flex;\n    justify-content: space-between;\n    align-items: flex-start;\n\n    div {\n      width: 20px;\n      height: 20px;\n      border-radius: 50%;\n      background-color: #BBB;\n    }\n\n    div:nth-child(1) {\n      animation: bubble .6s cubic-bezier(.6,0,.73,1.29) 0s infinite alternate;\n    }\n    div:nth-child(2) {\n      animation: bubble .6s cubic-bezier(.6,0,.73,1.29) 0.2s infinite alternate;\n    }\n    div:nth-child(3) {\n      animation: bubble .6s cubic-bezier(.6,0,.73,1.29) .4s infinite alternate;\n    }\n    div:nth-child(4) {\n      animation: bubble .6s cubic-bezier(.6,0,.73,1.29) 0.6s infinite alternate;\n    }\n\n    @keyframes bubble {\n      from {\n        opacity: 1;\n        background-color: #000;\n      }\n      to {\n        opacity: .4;\n        transform: translateY(15px);\n        background-color: #BBB;\n      }\n    }\n  `;\n  return (\n    <div css={styling}>\n  \t  <div></div>\n  \t  <div></div>\n  \t  <div></div>\n  \t  <div></div>\n  \t</div>\n  );\n}\n\nexport default PulseBubble2;\n","/** @jsx jsx */\nimport { jsx, css } from '@emotion/core';\n\nfunction Ripple() {\n  const styling = css`\n    ${'' /* border: 1px solid green; */}\n\n    width: 100px;\n    height: 100px;\n    position: relative;\n\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    div {\n      width: 30px;\n      height: 30px;\n      border-radius: 50%;\n      position: absolute;\n    }\n\n    div:nth-child(1) {\n      animation: ripple 1.6s ease 0s infinite;\n    }\n    div:nth-child(2) {\n      animation: ripple 1.6s ease 0.4s infinite;\n    }\n    div:nth-child(3) {\n      animation: ripple 1.6s ease 0.8s infinite;\n    }\n\n    @keyframes ripple {\n      from {\n        border: 5px solid;\n        opacity: 1;\n        top: 45%;\n        left: 45%;\n        width: 0px;\n        height: 0px;\n      }\n      to {\n        border: 5px solid;\n        opacity: 0;\n        top: 10%;\n        left: 10%;\n        width: 69px;\n        height: 69px;\n        transform: scale(1.3);\n      }\n    }\n  `;\n  return (\n    <div css={styling}>\n  \t  <div></div>\n  \t  <div></div>\n  \t  <div></div>\n  \t</div>\n  );\n}\n\nexport default Ripple;\n","/** @jsx jsx */\nimport { jsx, css } from '@emotion/core';\n\nfunction Rect1() {\n  const styling = css`\n    ${'' /* border: 1px solid green; */}\n\n    width: 80px;\n    height: 10px;\n    position: relative;\n\n    div {\n      width: 10px;\n      height: 10px;\n      background-color: #BBB;\n      position: absolute;\n      top: 0;\n      left: 0;\n    }\n\n    div:nth-child(1) {\n      animation: move 1s ease 0s infinite alternate;\n    }\n\n    @keyframes move {\n      0% {\n        top: 0;\n        left: 0;\n        width: 10px;\n        height: 10px;\n      }\n      50% {\n        top: 0;\n        left: 0;\n        width: 80px;\n        height: 10px;\n      }\n      100% {\n        top: 0;\n        left: 70px;\n        width: 10px;\n        height: 10px;\n      }\n    }\n  `;\n  return (\n    <div css={styling}>\n  \t  <div></div>\n  \t</div>\n  );\n}\n\nexport default Rect1;\n","/** @jsx jsx */\nimport { jsx, css } from '@emotion/core';\n\nfunction Rect2() {\n  const styling = css`\n    ${'' /* border: 1px solid green; */}\n\n    width: 80px;\n    height: 80px;\n    position: relative;\n\n    div {\n      width: 10px;\n      height: 10px;\n      background-color: #BBB;\n      position: absolute;\n      top: 0;\n      left: 0;\n    }\n\n    div:nth-child(1) {\n      animation: square-move 3s ease 0s infinite;\n    }\n\n    @keyframes square-move {\n      0% {\n        top: 0;\n        left: 0;\n        width: 10px;\n        height: 10px;\n      }\n      12.5% {\n        top: 0;\n        left: 0;\n        width: 80px;\n        height: 10px;\n      }\n      25% {\n        top: 0;\n        left: 70px;\n        width: 10px;\n        height: 10px;\n      }\n      37.5% {\n        top: 0;\n        left: 70px;\n        height: 80px;\n        width: 10px;\n      }\n      50% {\n        top: 70px;\n        left: 70px;\n        width: 10px;\n        height: 10px;\n      }\n      67.5% {\n        top: 70px;\n        left: 0px;\n        width: 80px;\n        height: 10px;\n      }\n      75% {\n        top: 70px;\n        left: 0px;\n        width: 10px;\n        height: 10px;\n      }\n      87.5% {\n        top: 0px;\n        left: 0;\n        height: 80px;\n        width: 10px;\n      }\n      100% {\n        top: 0px;\n        left: 0px;\n        width: 10px;\n        height: 10px;\n      }\n    }\n  `;\n  return (\n    <div css={styling}>\n  \t  <div></div>\n  \t</div>\n  );\n}\n\nexport default Rect2;\n","/** @jsx jsx */\nimport { jsx, css } from '@emotion/core';\n\nfunction CircleRotate() {\n  const styling = css`\n    ${'' /* border: 1px solid green; */}\n\n    width: 75px;\n    height: 75px;\n    position: relative;\n\n    div {\n      width: 60px;\n      height: 60px;\n      border-radius: 50%;\n      position: absolute;\n    }\n\n    div:nth-child(1) {\n      border: 8px solid #000;\n      border-color: #000 transparent transparent transparent;\n      animation: circle-move-1 6s cubic-bezier(.76,0,.63,1) 0.25s infinite;\n    }\n    div:nth-child(2) {\n      border: 8px solid #000;\n      border-color: transparent #000 transparent transparent;\n      animation: circle-move-2 6s cubic-bezier(.76,0,.63,1) 0.5s infinite;\n    }\n    div:nth-child(3) {\n      border: 8px solid #000;\n      border-color: transparent transparent #000 transparent;\n      animation: circle-move-3 2s cubic-bezier(.76,0,.63,1) 0s infinite;\n    }\n\n    @keyframes circle-move-1 {\n      0% {\n        border-color: #000 transparent transparent transparent;\n      }\n      25% {\n        border-color: transparent #000 transparent transparent;\n        transform: rotate(360deg);\n      }\n      50% {\n        border-color: transparent transparent #000 transparent;\n        transform: rotate(720deg);\n      }\n      75% {\n        border-color: transparent transparent transparent #000;\n        transform: rotate(1080deg);\n      }\n    }\n\n    @keyframes circle-move-2 {\n      0% {\n        border-color: transparent #000 transparent transparent;\n      }\n      25% {\n        border-color: transparent transparent #000 transparent;\n        transform: rotate(360deg);\n      }\n      50% {\n        border-color: transparent transparent transparent #000;\n        transform: rotate(720deg);\n      }\n      75% {\n        border-color: #000 transparent transparent transparent;\n        transform: rotate(1080deg);\n      }\n    }\n\n    @keyframes circle-move-3 {\n      0% {\n        border-color: transparent transparent #000 transparent;\n      }\n      25% {\n        border-color: transparent transparent transparent #000;\n        transform: rotate(360deg);\n      }\n      50% {\n        border-color: #000 transparent transparent transparent;\n        transform: rotate(720deg);\n      }\n      75% {\n        border-color: transparent #000 transparent transparent;\n        transform: rotate(1080deg);\n      }\n    }\n  `;\n  return (\n    <div css={styling}>\n  \t  <div></div>\n  \t  <div></div>\n  \t</div>\n  );\n}\n\nexport default CircleRotate;\n","/** @jsx jsx */\nimport { jsx, css } from '@emotion/core';\nimport { useState } from 'react';\n\nimport ArrowLeft from './ArrowLeft.js';\nimport ArrowRight from './ArrowRight.js';\nimport ProgressDots from './ProgressDots.js';\n\nimport PulseBar1 from './loaders/pulseBar1.js';\nimport PulseBar2 from './loaders/pulseBar2.js';\nimport PulseBubble1 from './loaders/pulseBubble1.js';\nimport PulseBubble2 from './loaders/pulseBubble2.js';\nimport Ripple from './loaders/ripple.js';\nimport Rect1 from './loaders/rect1.js';\nimport Rect2 from './loaders/rect2.js';\nimport CircleRotate from './loaders/circleRotate.js';\n\n\nconst dotData = [\n  <PulseBar1 />,\n  <PulseBar2 />,\n  <PulseBubble1 />,\n  <PulseBubble2 />,\n  <Ripple />,\n  <Rect1 />,\n  <Rect2 />,\n  <CircleRotate />\n]\n\nconsole.log(dotData.length)\n\nfunction Content(props) {\n  const styling = css`\n    ${'' /* border: 1px solid green; */}\n\n    position: absolute;\n    top: 0;\n    left: 0;\n    height: 100%;\n    width: 100%;\n    z-index: 1;\n\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    .centered {\n      ${'' /* border: 1px solid orange; */}\n\n      margin: 0 auto;\n      width: 80%;\n      height: 80%;\n\n      display: flex;\n      justify-content: center;\n      align-items: center;\n    }\n  `;\n  return (\n    <div css={styling}>\n      <div className=\"centered\">\n        {dotData[props.current]}\n      </div>\n  \t</div>\n  );\n}\n\nfunction Carousel() {\n  const [ current, setCurrent ] = useState(0);\n  const styling = css`\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    z-index: -1;\n  `;\n  return (\n    <div css={styling}>\n      {current === 0 ?\n        <ArrowRight current={current} setCurrent={setCurrent} /> :\n        current === dotData.length-1 ?\n          <ArrowLeft current={current} setCurrent={setCurrent} /> :\n          <div>\n            <ArrowLeft current={current} setCurrent={setCurrent} />\n            <ArrowRight current={current} setCurrent={setCurrent} />\n          </div>}\n\n      <Content current={current} data={dotData} />\n      <ProgressDots current={current} data={dotData} setCurrent={setCurrent} />\n  \t</div>\n  );\n}\n\nexport default Carousel;\n","/** @jsx jsx */\nimport { jsx, css } from '@emotion/core';\nimport { useState } from 'react';\n\nimport HamburgerX from './hamburgerX.js';\n// import Menu from './menu.js';\n\n\nimport Carousel from './carousel.js';\n\n\nfunction App() {\n  const [clicked, setClicked] = useState(false);//temp set to false\n  const hamburgerStyle = css`\n    position: relative;\n    top: 20px;\n    left: 20px;\n    z-index: 2;\n  `;\n  return (\n    <div>\n  \t  <div css={hamburgerStyle}>\n        <HamburgerX click={clicked} clickhandler={setClicked}/>\n      </div>\n      {/* <Menu click={clicked}/> */}\n      <Carousel />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","/** @jsx jsx */\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { jsx, Global, css } from '@emotion/core';\nimport { BrowserRouter } from 'react-router-dom';\n\nconst globalStyles = css`\n  body {\n    margin: 0;\n    height: 100%;\n  }\n`;\n\nReactDOM.render(\n  <div>\n    <Global styles={globalStyles} />\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </div>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}